// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using projectEF;

#nullable disable

namespace projectEF.Migrations
{
    [DbContext(typeof(TasksContext))]
    [Migration("20230318180837_ChangePropertyName")]
    partial class ChangePropertyName
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("projectEF.Models.Category", b =>
                {
                    b.Property<Guid>("IdCategory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Impact")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("IdCategory");

                    b.ToTable("Category", (string)null);

                    b.HasData(
                        new
                        {
                            IdCategory = new Guid("bb400eef-eb06-4eed-90ac-cae351c8e3e5"),
                            Description = "",
                            Impact = 20,
                            Name = "Actividades Pendientes"
                        },
                        new
                        {
                            IdCategory = new Guid("d8682463-0c22-4356-960c-2a25d3a961ac"),
                            Description = "",
                            Impact = 50,
                            Name = "Actividades Personales"
                        },
                        new
                        {
                            IdCategory = new Guid("785f1edd-0a8f-4384-9f21-9d210692e685"),
                            Description = "",
                            Impact = 30,
                            Name = "Actividades Grupales"
                        });
                });

            modelBuilder.Entity("projectEF.Models.Task", b =>
                {
                    b.Property<Guid>("IdTask")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CulminationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdCategory")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("IdTask");

                    b.HasIndex("IdCategory");

                    b.ToTable("Task", (string)null);

                    b.HasData(
                        new
                        {
                            IdTask = new Guid("0c59ab0f-737b-4f62-8bc4-2eb725f3046d"),
                            CreationDate = new DateTime(2023, 3, 18, 13, 8, 37, 588, DateTimeKind.Local).AddTicks(4686),
                            Description = "",
                            IdCategory = new Guid("bb400eef-eb06-4eed-90ac-cae351c8e3e5"),
                            Priority = 1,
                            Title = "Pago de Servicios Publicos"
                        },
                        new
                        {
                            IdTask = new Guid("55d8ca55-2764-4ecf-b15b-e17ed218dd7e"),
                            CreationDate = new DateTime(2023, 3, 18, 13, 8, 37, 588, DateTimeKind.Local).AddTicks(4697),
                            Description = "",
                            IdCategory = new Guid("d8682463-0c22-4356-960c-2a25d3a961ac"),
                            Priority = 0,
                            Title = "Terminar de ver pelicula en Netflix"
                        },
                        new
                        {
                            IdTask = new Guid("c20458e1-beeb-42f5-83d1-b5e12bb487b3"),
                            CreationDate = new DateTime(2023, 3, 18, 13, 8, 37, 588, DateTimeKind.Local).AddTicks(4700),
                            Description = "",
                            IdCategory = new Guid("785f1edd-0a8f-4384-9f21-9d210692e685"),
                            Priority = 2,
                            Title = "Pichanga del Viernes"
                        });
                });

            modelBuilder.Entity("projectEF.Models.Task", b =>
                {
                    b.HasOne("projectEF.Models.Category", "Category")
                        .WithMany("Tasks")
                        .HasForeignKey("IdCategory")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("projectEF.Models.Category", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
